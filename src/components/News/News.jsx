import React, { useEffect } from 'react';
import { Divider, Typography } from '@material-ui/core';
import { useDispatch, useSelector } from 'react-redux';
import { getArticlesFromSearch } from '../../redux/actions/posts';
import useStyles from './styles';
import { Skeleton } from '@material-ui/lab';
import { useLocation } from 'react-router-dom';
import agroFamLogo from '../../images/agroFamLogo.png';
import { getQueryParams } from '../../utils/utils';


const News = () => {
  const classes = useStyles();
  const dispatch = useDispatch();
  const searchQuery = getQueryParams('searchQuery');
  const tagsQuery = getQueryParams('tags');
  const { articles, isLoadingNews } = useSelector((state) => state.posts);
  const language = useSelector((state) => state.settings.language).toLowerCase();
  
  const queriesByLanguage = {
    english: [
      `Agriculture News In India`,
      `india agri news`,
      `agri news india`,
      `agri news`,
      `agriculture news`,
      `agriculture news india`,
      `agriculture news`,
      `agri news`,
      `todays agriculture news`,
      `latest news on agriculture`,
    ],
    hindi: [
      `‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§≠‡§æ‡§∞‡§§`,
      `‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§Ü‡§ú`,
      `‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§∂‡•Ä‡§∞‡•ç‡§∑ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§≠‡§æ‡§∞‡§§ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§ï‡•É‡§∑‡§ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü`,
      `‡§≠‡§æ‡§∞‡§§ ‡§ï‡•É‡§∑‡§ø ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞`,
      `‡§≠‡§æ‡§∞‡§§ ‡§Æ‡•á‡§Ç ‡§®‡§à ‡§ï‡•É‡§∑‡§ø ‡§®‡•Ä‡§§‡§ø‡§Ø‡§æ‡§Ç`,
    ],
    marathi: [
      "‡§≠‡§æ‡§∞‡§§‡§æ‡§§‡•Ä‡§≤ ‡§∂‡•á‡§§‡•Ä‡§µ‡§∞‡•Ä‡§≤ ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
      "‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§∂‡•á‡§§‡•Ä‡§µ‡§∞‡•Ä‡§≤ ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
      "‡§∂‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§Æ‡§∞‡§æ‡§†‡•Ä‡§§",
      "‡§∂‡•á‡§§‡•Ä ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
      "‡§≠‡§æ‡§∞‡§§‡§æ‡§§‡•Ä‡§≤ ‡§∂‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞",
      "‡§∂‡•á‡§§‡•Ä ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ ‡§≤‡•á‡§ü‡•á‡§∏‡•ç‡§ü",
      "‡§Æ‡§∞‡§æ‡§†‡•Ä ‡§∂‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞",
      "‡§∂‡•á‡§§‡•Ä‡§ö‡•Ä ‡§¨‡§æ‡§§‡§Æ‡•ç‡§Ø‡§æ",
      "‡§Ü‡§ú‡§ö‡•ç‡§Ø‡§æ ‡§∂‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞",
      "‡§∂‡•á‡§§‡•Ä ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§§‡§æ‡§ú‡•ç‡§Ø‡§æ",
    ],
    punjabi: [
      "‡®≠‡®æ‡®∞‡®§‡©Ä ‡®ñ‡©á‡®§‡©Ä ‡®¶‡©Ä‡®Ü‡®Ç ‡®ñ‡®¨‡®∞‡®æ‡®Ç ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ‡®µ‡®ø‡©±‡®ö",
      "‡®ñ‡©á‡®§‡©Ä ‡®ñ‡®¨‡®∞‡®æ‡®Ç ‡®≠‡®æ‡®∞‡®§ ‡®µ‡®ø‡©±‡®ö",
      "‡®≠‡®æ‡®∞‡®§ ‡®¶‡©Ä‡®Ü‡®Ç ‡®ñ‡©á‡®§‡©Ä ‡®¶‡©Ä‡®Ü‡®Ç ‡®§‡®æ‡®ú‡®º‡®æ ‡®ñ‡®¨‡®∞‡®æ‡®Ç",
      "‡®™‡©∞‡®ú‡®æ‡®¨ ‡®µ‡®ø‡©±‡®ö ‡®ï‡®ø‡®∏‡®æ‡®® ‡®ñ‡©á‡®§‡©Ä ‡®®‡®æ‡®≤ ‡®∏‡®¨‡©∞‡®ß‡®ø‡®§ ‡®ñ‡®¨‡®∞‡®æ‡®Ç",
      "‡®ñ‡©á‡®§‡©Ä ‡®¶‡©Ä‡®Ü‡®Ç ‡®µ‡®ø‡®∏‡®§‡®æ‡®∞‡®æ‡®Ç ‡®¶‡©á ‡®¨‡®æ‡®∞‡©á ‡®ñ‡®¨‡®∞‡®æ‡®Ç",
      "‡®ñ‡©á‡®§‡©Ä ‡®¶‡©Ä‡®Ü‡®Ç ‡®§‡®æ‡®ú‡®º‡®æ ‡®ñ‡®¨‡®∞‡®æ‡®Ç ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ‡®≠‡®æ‡®∏‡®º‡®æ ‡®µ‡®ø‡©±‡®ö",
      "‡®™‡©∞‡®ú‡®æ‡®¨ ‡®¶‡©Ä‡®Ü‡®Ç ‡®ñ‡©á‡®§‡©Ä ‡®¶‡©Ä‡®Ü‡®Ç ‡®ñ‡®¨‡®∞‡®æ‡®Ç ‡®Ö‡®§‡©á ‡®Ö‡®®‡©Å‡®∏‡®æ‡®∞‡®æ‡®Ç",
      "‡®ñ‡©á‡®§‡©Ä ‡®§‡©á ‡®ï‡®ø‡®∏‡®æ‡®® ‡®®‡®æ‡®≤ ‡®∏‡©∞‡®¨‡©∞‡®ß‡®ø‡®§ ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ‡®µ‡®ø‡©±‡®ö ‡®ñ‡®¨‡®∞‡®æ‡®Ç",
      "‡®ñ‡©á‡®§‡©Ä ‡®ñ‡®¨‡®∞‡®æ‡®Ç ‡®¶‡©á ‡®π‡®æ‡®≤ ‡®™‡©∞‡®ú‡®æ‡®¨ ‡®µ‡®ø‡©±‡®ö ‡®ú‡®æ‡®£‡©ã",
    ],
    gujarati: [
      "‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞ ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä",  
      "‡™ó‡´Å‡™ú‡™∞‡™æ‡™§ ‡™ñ‡´á‡™§‡´Ä ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞",  
      "‡™ó‡´Å‡™ú‡™∞‡™æ‡™§ ‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞",  
      "‡™ñ‡´á‡™§‡´Ä ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞ ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä",  
      "‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞‡™®‡´Ä ‡™õ‡™°‡´Ä",  
      "‡™Ö‡™Æ‡™¶‡™æ‡™µ‡™æ‡™¶ ‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞",  
      "‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä‡™Æ‡™æ‡™Ç ‡™ñ‡´á‡™§‡´Ä ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞",  
      "‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞ ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä‡™Æ‡™æ‡™Ç",  
      "‡™§‡™æ‡™ú‡´Ä ‡™ñ‡´á‡™§‡´Ä ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞ ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä‡™Æ‡™æ‡™Ç",  
      "‡™ï‡´É‡™∑‡™ø ‡™∏‡™Æ‡™æ‡™ö‡™æ‡™∞ ‡™π‡™ø‡™Ç‡™¶‡´Ä‡™Æ‡™æ‡™Ç",
    ],
    tamil: [  
      "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Æï‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Øç ‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç‡Æ®‡Ææ‡Æü‡Øç‡Æü‡Æø‡Æ≤‡Øç ‡Æ™‡ØÅ‡Æ§‡Æø‡ÆØ ‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç‡Æ®‡Ææ‡Æü‡Øç‡Æü‡Æø‡Æ≤‡Øç ‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç",  
      "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Æï‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Øç ‡Æ§‡Øä‡Æ¥‡Æø‡Æ≤‡Øç‡Æ®‡ØÅ‡Æü‡Øç‡Æ™ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç",  
      "‡Æá‡Æ®‡Øç‡Æ§‡Æø‡ÆØ‡Ææ‡Æµ‡Æø‡Æ©‡Øç ‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æá‡Æ®‡Øç‡Æ§‡Æø‡ÆØ‡Ææ‡Æµ‡Æø‡Æ©‡Øç ‡Æ§‡Øä‡Æ¥‡Æø‡Æ≤‡Øç‡Æ®‡ØÅ‡Æü‡Øç‡Æ™ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",  
      "‡Æ®‡Ææ‡Æü‡ØÅ‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡Æµ‡Øá‡Æ≥‡Ææ‡Æ£‡Øç‡ÆÆ‡Øà ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡Æø‡Æï‡Æ≥‡Øç",
    ],
    telugu: [
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞µ‡∞∞‡∞∏‡∞æ‡∞§‡∞ø‡∞™‡±ã‡∞§‡±Å‡∞®‡±ç‡∞® ‡∞™‡∞∂‡±Å‡∞µ‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞ï‡±Å ‡∞∏‡∞Ç‡∞¨‡∞Ç‡∞ß‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞µ‡∞∞‡∞∏‡∞æ‡∞§‡∞ø‡∞™‡±ã‡∞§‡±Å‡∞®‡±ç‡∞® ‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø‡∞ï‡∞ø ‡∞∏‡∞Ç‡∞¨‡∞Ç‡∞ß‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£ ‡∞∞‡±à‡∞§‡±Å‡∞≤ ‡∞∏‡∞Ç‡∞ò‡∞Ç ‡∞™‡±ç‡∞∞‡∞ï‡∞ü‡∞®',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞é‡∞Ç‡∞°‡∞∞‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞® ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞≤‡∞ï‡±Å ‡∞∏‡∞Ç‡∞¨‡∞Ç‡∞ß‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£ ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞™‡∞Ç‡∞ü‡∞≤ ‡∞∏‡∞Ç‡∞¨‡∞Ç‡∞ß‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞µ‡±ç‡∞Ø‡∞æ‡∞™‡∞æ‡∞∞ ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£ ‡∞™‡∞æ‡∞∞‡±ç‡∞ü‡±Ä‡∞≤ ‡∞™‡±ç‡∞∞‡∞ï‡∞ü‡∞®‡∞≤‡±Å',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞µ‡±ç‡∞Ø‡∞æ‡∞™‡∞æ‡∞∞ ‡∞ï‡±á‡∞Ç‡∞¶‡±ç‡∞∞‡∞æ‡∞≤ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç',
      '‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£‡∞≤‡±ã ‡∞Æ‡∞æ‡∞ú‡±Ä ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡±Å‡∞≤ ‡∞™‡±ç‡∞∞‡∞ï‡∞ü‡∞®‡∞≤‡±Å',
    ],
    kannada: [
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤§‡≤æ‡≤ú‡≤æ ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤§‡≤æ‡≤ú‡≤æ ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤§‡≤æ‡≤ú‡≤æ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤§‡≤æ‡≤ú‡≤æ ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø‡≤ó‡≤≥‡≥Å",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤®‡≥ç‡≤Ø‡≥Ç‡≤∏‡≥ç",
      "‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤§‡≤æ‡≤ú‡≤æ ‡≤∏",
    ],
    malayalam: [
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥≠‡¥æ‡¥∞‡¥§‡¥§‡µç‡¥§‡¥ø‡¥≤‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥ï‡µá‡¥∞‡¥≥‡¥§‡µç‡¥§‡¥ø‡¥≤‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥®‡µç‡¥Ø‡µÇ‡¥∏‡µç ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥Æ‡¥æ‡¥ö‡¥æ‡¥∞‡¥Ç ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥á‡¥®‡µç‡¥§‡µç‡¥Ø‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥á‡¥®‡µç‡¥®‡µç",
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥á‡¥®‡µç‡¥®‡¥§‡µç‡¥§‡µÜ ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ",
      "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥®‡µç‡¥Ø‡µÇ‡¥∏‡µç ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥á‡¥®‡µç‡¥®‡µç",
      "‡¥®‡¥µ‡µÄ‡¥®‡¥§‡¥æ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ",
    ],
    bengali: [
      "‡¶≠‡¶æ‡¶∞‡¶§‡ßá ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶",
      "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ",
      "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá ‡¶∂‡ßá‡¶∑ ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶ ‡¶≠‡¶æ‡¶∞‡¶§‡ßá",
      "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶ñ‡¶¨‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶ ‡¶§‡¶æ‡¶ú‡¶æ",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶ ‡¶∂‡ßá‡¶∑",
      "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶ñ‡¶¨‡¶∞ ‡¶Ü‡¶ú‡¶ï‡ßá",
    ],
  };

  const queries = queriesByLanguage[language];
  const randomQuery = queries[Math.floor(Math.random() * queries.length)];

  useEffect(() => {
    !tagsQuery && !searchQuery && dispatch(getArticlesFromSearch(randomQuery));
  }, []);

  const NewsLoading = () => (
    <>
      <div className={classes.newsCard}>
        <div className={classes.newsContent}>
          <Skeleton animation="wave" variant="circle" width={28} height={28} />
          <Skeleton animation="wave" variant="rect" width={300} height={30} />
        </div>
        <Skeleton animation="wave" variant="text" />
      </div>
      <Divider />
    </>
  );

  const NewsList = () =>
    articles.length === 0 ? (
      <div>No News Found</div>
    ) : (
      articles.map((newsItem, i) => (
        <div key={i}>
          <div className={classes.newsCard}>
            <div className={classes.newsContent}>
              <img src={newsItem.image_url || agroFamLogo} alt="news-source favicon" />
              <a href={newsItem.link} target="_blank">
                <h3>{newsItem.title}</h3>
              </a>
            </div>
            <a href={newsItem.link} target="_blank">
              {newsItem.link.substring(0, 40)}...
            </a>
          </div>
          <Divider />
        </div>
      ))
    );

  return (
    <>
      {tagsQuery || searchQuery ? (
        <Typography variant="h5">üîç Results From Web</Typography>
      ) : (
        <Typography variant="h5">üì∞ Latest News</Typography>
      )}
      <div className={classes.newsContainer}>
        {isLoadingNews ? (
          <>
            <NewsLoading />
            <NewsLoading />
            <NewsLoading />
            <NewsLoading />
            <NewsLoading />
          </>
        ) : (
          <NewsList />
        )}
      </div>
    </>
  );
};

export default News;
